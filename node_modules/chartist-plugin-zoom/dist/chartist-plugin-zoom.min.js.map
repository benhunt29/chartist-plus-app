{"version":3,"sources":["chartist-plugin-zoom.js"],"names":["root","factory","define","amd","returnExportsGlobal","exports","module","this","window","document","Chartist","hide","rect","attr","style","show","getRect","firstPoint","secondPoint","x","y","width","height","position","event","svg","transform","clientX","clientY","svgElement","tagName","ownerSVGElement","matrix","getScreenCTM","point","createSVGPoint","matrixTransform","inverse","project","value","axis","max","bounds","min","scale","type","base","Math","pow","baseLog","axisLength","range","val","log","defaultOptions","plugins","zoom","options","extend","chart","copyTouch","touch","p","id","identifier","ongoingTouchIndexById","idToFind","i","ongoingTouches","length","onTouchStart","touches","changedTouches","push","onTouchMove","idx","splice","preventDefault","onTouchCancel","removeTouches","onTouchEnd","zoomIn","onMouseDown","button","downPosition","onMouseUp","box","resetOnRightMouseBtn","reset","x1","chartRect","x2","y2","y1","axisX","highLow","low","high","axisY","update","data","onZoom","onMouseMove","Line","on","element","clip-path","_node","elem","chartArea","fill-opacity","defs","querySelector","fill","addEventListener"],"mappings":"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","file":"chartist-plugin-zoom.min.js","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function () {\n      return (root.returnExportsGlobal = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Chartist.plugins.zoom'] = factory();\n  }\n}(this, function () {\n\n  (function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define([], function () {\n        return (root.returnExportsGlobal = factory());\n      });\n    } else if (typeof exports === 'object') {\n      // Node. Does not work with strict CommonJS, but\n      // only CommonJS-like enviroments that support module.exports,\n      // like Node.\n      module.exports = factory();\n    } else {\n      root['Chartist.plugins.zoom'] = factory();\n    }\n  }(this, function () {\n\n    /**\n     * Chartist.js zoom plugin.\n     *\n     */\n    (function (window, document, Chartist) {\n      'use strict';\n\n      var defaultOptions = {\n        // onZoom\n        // resetOnRightMouseBtn\n      };\n\n\n      Chartist.plugins = Chartist.plugins || {};\n      Chartist.plugins.zoom = function (options) {\n\n        options = Chartist.extend({}, defaultOptions, options);\n\n        return function zoom(chart) {\n\n          if (!(chart instanceof Chartist.Line)) {\n            return;\n          }\n\n          var rect, svg, axisX, axisY, chartRect;\n          var downPosition;\n          var onZoom = options.onZoom;\n          var ongoingTouches = [];\n\n          chart.on('draw', function (data) {\n            var type = data.type;\n            if (type === 'line' || type === 'bar' || type === 'area' || type === 'point') {\n              data.element.attr({\n                'clip-path': 'url(#zoom-mask)'\n              });\n            }\n          });\n\n          chart.on('created', function (data) {\n            axisX = data.axisX;\n            axisY = data.axisY;\n            chartRect = data.chartRect;\n            svg = data.svg._node;\n            rect = data.svg.elem('rect', {\n              x: 10,\n              y: 10,\n              width: 100,\n              height: 100,\n            }, 'ct-zoom-rect');\n            var chartArea = data.svg.elem('rect', {\n              x: chartRect.x1,\n              y: chartRect.y2,\n              width: chartRect.x2 - chartRect.x1,\n              height: chartRect.y1 - chartRect.y2,\n              'fill-opacity': 0\n            }, '');\n            hide(rect);\n\n            var defs = data.svg.querySelector('defs') || data.svg.elem('defs');\n            var width = chartRect.width();\n            var height = chartRect.height();\n\n            defs\n              .elem('clipPath', {\n                id: 'zoom-mask'\n              })\n              .elem('rect', {\n                x: chartRect.x1,\n                y: chartRect.y2,\n                width: width,\n                height: height,\n                fill: 'white'\n              });\n            chartArea._node.addEventListener('mousedown', onMouseDown);\n            chartArea._node.addEventListener('mouseup', onMouseUp);\n            chartArea._node.addEventListener('mousemove', onMouseMove);\n            chartArea._node.addEventListener('touchstart', onTouchStart);\n            chartArea._node.addEventListener('touchmove', onTouchMove);\n            chartArea._node.addEventListener('touchend', onTouchEnd);\n            chartArea._node.addEventListener('touchcancel', onTouchCancel);\n          });\n\n          function copyTouch(touch) {\n            var p = position(touch, svg);\n            p.id = touch.identifier;\n            return p;\n          }\n\n          function ongoingTouchIndexById(idToFind) {\n            for (var i = 0; i < ongoingTouches.length; i++) {\n              var id = ongoingTouches[i].id;\n              if (id === idToFind) {\n                return i;\n              }\n            }\n            return -1;\n          }\n\n          function onTouchStart(event) {\n            var touches = event.changedTouches;\n            for (var i = 0; i < touches.length; i++) {\n              ongoingTouches.push(copyTouch(touches[i]));\n            }\n\n            if (ongoingTouches.length > 1) {\n              rect.attr(getRect(ongoingTouches[0], ongoingTouches[1]));\n              show(rect);\n            }\n          }\n\n          function onTouchMove(event) {\n            var touches = event.changedTouches;\n            for (var i = 0; i < touches.length; i++) {\n              var idx = ongoingTouchIndexById(touches[i].identifier);\n              ongoingTouches.splice(idx, 1, copyTouch(touches[i]));\n            }\n\n            if (ongoingTouches.length > 1) {\n              rect.attr(getRect(ongoingTouches[0], ongoingTouches[1]));\n              show(rect);\n              event.preventDefault();\n            }\n          }\n\n          function onTouchCancel(event) {\n            removeTouches(event.changedTouches);\n          }\n\n          function removeTouches(touches) {\n            for (var i = 0; i < touches.length; i++) {\n              var idx = ongoingTouchIndexById(touches[i].identifier);\n              if (idx >= 0) {\n                ongoingTouches.splice(idx, 1);\n              }\n            }\n          }\n\n          function onTouchEnd(event) {\n            if (ongoingTouches.length > 1) {\n              zoomIn(getRect(ongoingTouches[0], ongoingTouches[1]));\n            }\n            removeTouches(event.changedTouches);\n            hide(rect);\n          }\n\n          function onMouseDown(event) {\n            if (event.button === 0) {\n              downPosition = position(event, svg);\n              rect.attr(getRect(downPosition, downPosition));\n              show(rect);\n              event.preventDefault();\n            }\n          }\n\n          var reset = function () {\n            chart.options.axisX.highLow = null;\n            chart.options.axisY.highLow = null;\n            chart.update(chart.data, chart.options);\n          };\n\n          function onMouseUp(event) {\n            if (event.button === 0 && downPosition) {\n              var box = getRect(downPosition, position(event, svg));\n              zoomIn(box);\n              downPosition = null;\n              hide(rect);\n              event.preventDefault();\n            }\n            else if (options.resetOnRightMouseBtn && event.button === 2) {\n              reset();\n              event.preventDefault();\n            }\n          }\n\n          function zoomIn(rect) {\n            if (rect.width > 5 && rect.height > 5) {\n              var x1 = rect.x - chartRect.x1;\n              var x2 = x1 + rect.width;\n              var y2 = chartRect.y1 - rect.y;\n              var y1 = y2 - rect.height;\n\n              chart.options.axisX.highLow = { low: project(x1, axisX), high: project(x2, axisX) };\n              chart.options.axisY.highLow = { low: project(y1, axisY), high: project(y2, axisY) };\n\n              chart.update(chart.data, chart.options);\n              onZoom && onZoom(chart, reset);\n            }\n          }\n\n          function onMouseMove(event) {\n            if (downPosition) {\n              var point = position(event, svg);\n              rect.attr(getRect(downPosition, point));\n              event.preventDefault();\n            }\n          }\n        };\n\n      };\n\n      function hide(rect) {\n        rect.attr({ style: 'display:none' });\n      }\n\n      function show(rect) {\n        rect.attr({ style: 'display:block' });\n      }\n\n      function getRect(firstPoint, secondPoint) {\n        var x = firstPoint.x;\n        var y = firstPoint.y;\n        var width = secondPoint.x - x;\n        var height = secondPoint.y - y;\n        if (width < 0) {\n          width = -width;\n          x = secondPoint.x;\n        }\n        if (height < 0) {\n          height = -height;\n          y = secondPoint.y;\n        }\n        return {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        };\n      }\n\n      function position(event, svg) {\n        return transform(event.clientX, event.clientY, svg);\n      }\n\n      function transform(x, y, svgElement) {\n        var svg = svgElement.tagName === 'svg' ? svgElement : svgElement.ownerSVGElement;\n        var matrix = svg.getScreenCTM();\n        var point = svg.createSVGPoint();\n        point.x = x;\n        point.y = y;\n        point = point.matrixTransform(matrix.inverse());\n        return point || { x: 0, y: 0 };\n      }\n\n      function project(value, axis) {\n        var max = axis.bounds.max;\n        var min = axis.bounds.min;\n        if (axis.scale && axis.scale.type === 'log') {\n          var base = axis.scale.base;\n          return Math.pow(base,\n              value * baseLog(max / min, base) / axis.axisLength) * min;\n        }\n        return (value * axis.bounds.range / axis.axisLength) + min;\n      }\n\n      function baseLog(val, base) {\n        return Math.log(val) / Math.log(base);\n      }\n\n    } (window, document, Chartist));\n    return Chartist.plugins.zoom;\n\n  }));\n\n  return Chartist.plugins.zoom;\n\n}));\n"]}